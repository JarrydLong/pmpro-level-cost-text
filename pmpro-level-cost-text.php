<?php
/*
Plugin Name: PMPro Custom Level Cost Test
Plugin URI: http://www.paidmembershipspro.com/wp/pmpro-custom-level-cost-text/
Description: Manually override the level cost text for each level or discount code.
Version: .1
Author: Stranger Studios
Author URI: http://www.strangerstudios.com
*/

//add level cost text field to level price settings
function pclct_pmpro_discount_code_after_level_settings($code_id, $level)
{
	$level_cost_text = pmpro_getCodeCustomLevelCostText($code_id, $level->id);	
?>
<table>
<tbody class="form-table">
	<tr>
		<td>
			<tr>
				<th scope="row" valign="top"><label for="level_cost_text">Level Cost Text:</label></th>
				<td>
					<textarea name="level_cost_text[]" rows="4" cols="50"><?php echo esc_textarea($level_cost_text);?></textarea>
					<br /><small>If completely blank, the default text generated by PMPro will be used.</small>
				</td>
			</tr>
		</td>
	</tr> 
</tbody>
</table>
<?php
}
add_action("pmpro_discount_code_after_level_settings", "pclct_pmpro_discount_code_after_level_settings", 10, 2);

//save subscription delays for the code when the code is saved/added
function pclct_pmpro_save_discount_code_level($code_id, $level_id)
{
	$all_levels_a = $_REQUEST['all_levels'];							//array of level ids checked for this code
	$level_cost_text_a = $_REQUEST['level_cost_text'];			//level_cost_text for levels checked
		
	if(!empty($all_levels_a))
	{	
		$key = array_search($level_id, $all_levels_a);				//which level is it in the list?				
		pmpro_saveCodeCustomLevelCostText($code_id, $level_id, $level_cost_text_a[$key]);			//add level cost text for this level		
	}	
}
add_action("pmpro_save_discount_code_level", "pclct_pmpro_save_discount_code_level", 10, 2);

//update subscription start date based on the discount code used
function pclct_pmpro_level_cost_text($cost, $level)
{
	global $wpdb;
		
	//check if a discount code is being used
	if(!empty($level->code_id))
		$code_id = $level->code_id;
	elseif(!empty($_REQUEST['discount_code']))
		$code_id = $wpdb->get_var("SELECT id FROM $wpdb->pmpro_discount_codes WHERE code = '" . $wpdb->escape($_REQUEST['discount_code']) . "' LIMIT 1");
	else
		$code_id = false;
	
	//used?
	if(!empty($code_id))
	{				
		//we have a code						
		$level_cost_text = pmpro_getCodeCustomLevelCostText($code_id, $level->id);		
		
		if(!empty($level_cost_text))
		{
			$cost = $level_cost_text;
			return $cost;
		}		
	}
	
	return $cost;
}
add_filter("pmpro_level_cost_text", "pclct_pmpro_level_cost_text", 10, 2);

/*	
	This function will save a level_cost_text for a discount code into an array stored in pmpro_code_level_cost_text.
*/
function pmpro_saveCodeCustomLevelCostText($code_id, $level_id, $level_cost_text)
{	
	$all_level_cost_text = get_option("pmpro_code_level_cost_text", array());
	
	//make sure we have an array for the code
	if(empty($all_level_cost_text[$code_id]))
		$all_level_cost_text[$code_id] = array();
	
	$all_level_cost_text[$code_id][$level_id] = $level_cost_text;
	
	update_option("pmpro_code_level_cost_text", $all_level_cost_text);
}

/*
	This function will return the level cost text for a discount code/level combo
*/
function pmpro_getCodeCustomLevelCostText($code_id, $level_id)
{
	$all_level_cost_text = get_option("pmpro_code_level_cost_text", array());
	
	if(!empty($all_level_cost_text[$code_id]))
	{
		if(!empty($all_level_cost_text[$code_id][$level_id]))
			return $all_level_cost_text[$code_id][$level_id];
	}
	
	//didn't find it
	return "";
}
